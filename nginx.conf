
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    lua_package_path '$prefix/lua/?.lua;/blah/?.lua;;';

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    lua_shared_dict userkey_store 100m;
    lua_shared_dict control_args_store 100k;

    #init shared dict [control_args_store] by lua file;
    init_worker_by_lua_file lua/init_args.lua;

    server {
        listen       8080;
        server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

	location /limit_control {
		default_type text/plain;
		access_by_lua_file lua/limit_control.lua;
	}

        location ~ ^/api.*\.(json)$ {

		set $current_path "api";

		lua_code_cache on;
		default_type text/plain;

		access_by_lua_file lua/limit_by_userkey.lua;	

		content_by_lua_block {
			ngx.sleep(5)
			ngx.say("done")
		}

		log_by_lua_file lua/check_resp_time.lua;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
     }
}
